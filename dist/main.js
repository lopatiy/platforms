!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}n.r(e);var r=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.canvas=e,this.cc=this.canvas.getContext("2d")}return function(t,e,n){e&&i(t.prototype,e),n&&i(t,n)}(t,[{key:"width",value:function(){return this.canvas.clientWidth}},{key:"height",value:function(){return this.canvas.clientHeight}},{key:"stroke",value:function(t){!t&&(t="nostroke"),this.cc.strokeStyle=t}},{key:"fill",value:function(t){!t&&(t="transparent"),this.cc.fillStyle=t}},{key:"clear",value:function(){this.cc.clearRect(0,0,this.canvas.width,this.canvas.height)}},{key:"point",value:function(t,e){this.ellipse(t,e,1)}},{key:"ellipse",value:function(t,e,n){this.cc.beginPath(),this.cc.ellipse(t,e,n,n,0,0,2*Math.PI),this.cc.stroke()}},{key:"line",value:function(t,e,n,i){this.cc.beginPath(),this.cc.moveTo(t,e),this.cc.lineTo(n,i),this.cc.stroke()}},{key:"sprite",value:function(t,e,n){this.cc.putImageData(t,e,n)}},{key:"shape",value:function(t){this.cc.beginPath(),this.cc.moveTo(t[0].x,t[0].y);for(var e=1;e<t.length;e++)this.cc.lineTo(t[e].x,t[e].y);this.cc.closePath(),this.cc.fill(),this.cc.stroke()}}]),t}();function o(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function c(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var a=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.load(e,108,47,n)}return function(t,e,n){e&&o(t.prototype,e),n&&o(t,n)}(t,[{key:"load",value:function(t,e,n,i){var r=this,o=document.createElement("img");o.onload=function(){var t=document.createElement("canvas");t.width=e,t.height=2*n,t.id="spritesCanvas",r.canvas=document.getElementById("spritesCanvas"),r.ctx=t.getContext("2d"),r.ctx.translate(e,0),r.ctx.scale(-1,1),r.ctx.drawImage(o,0,0,e,n),r.ctx.translate(e,0),r.ctx.scale(-1,1),r.ctx.drawImage(o,0,n,e,n),i(r.ctx.getImageData(0,0,e,n))},o.setAttribute("crossOrigin",""),o.src=t+"?"+(new Date).getTime()}},{key:"copy",value:function(){var t;return(t=this.ctx).getImageData.apply(t,arguments)}}]),t}();c(a,"spriteSheet",[[72,0,36,47],[0,47,36,47],[0,0,36,47],[72,47,36,47],[36,0,36,47],[36,47,36,47]]),c(a,"SPRITE",{IDLE:[a.spriteSheet[0],a.spriteSheet[1]],RUN:[[a.spriteSheet[2],a.spriteSheet[3]],[a.spriteSheet[4],a.spriteSheet[5]]]});var s=function(t,e){return[t[0]+e[0],t[1]+e[1]]};function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function h(t,e){return!e||"object"!==u(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function f(t,e,n){return(f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=p(t)););return t}(t,e);if(i){var r=Object.getOwnPropertyDescriptor(i,e);return r.get?r.get.call(n):r.value}})(t,e,n||t)}function p(t){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function y(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&v(t,e)}function v(t,e){return(v=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function d(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function b(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function g(t,e,n){return e&&b(t.prototype,e),n&&b(t,n),t}var m,w=[0,.5],k=function(){function t(e,n){d(this,t),this.pos=[e,n],this.acc=[0,0],this.vel=[0,0]}return g(t,[{key:"update",value:function(){this.vel=s(this.vel,this.acc),this.pos=s(this.pos,this.vel)}}]),t}(),O=function(t){function e(t,n){var i;return d(this,e),(i=h(this,p(e).call(this,t,n))).dir=1,i.ground=n,i.sprite=a.SPRITE.IDLE[0],i}return y(e,k),g(e,[{key:"stop",value:function(){this.sprite=a.SPRITE.IDLE[0],this.vel[0]=0}},{key:"left",value:function(){this.dir=0,this.vel[0]=-3}},{key:"right",value:function(){this.dir=1,this.vel[0]=3}},{key:"duck",value:function(){}},{key:"jump",value:function(){this.isOnGround()?(this.applyJump(),this.doubleJumpAllowed=!0):this.doubleJumpAllowed&&(this.applyJump(),this.doubleJumpAllowed=!1)}},{key:"applyJump",value:function(){this.vel[1]=-6}},{key:"isOnGround",value:function(){return this.pos[1]>=this.ground}},{key:"update",value:function(){this.isOnGround()||(this.vel=s(this.vel,w)),f(p(e.prototype),"update",this).call(this),this.pos[1]>=this.ground&&(this.pos[1]=this.ground)}},{key:"render",value:function(t,e,n){var i;switch(!0){case Math.abs(this.vel[0])>0:i=a.SPRITE.RUN[Math.ceil(n%100/10)%2][this.dir];break;default:i=a.SPRITE.IDLE[this.dir]}this.isOnGround()||(i=a.SPRITE.IDLE[this.dir]);var r=this.pos[0]-i[2]/2,o=this.pos[1]-i[3],c=e.copy.apply(e,l(i));return t.sprite(c,r,o)}}]),e}(),S=function(t){function e(t,n){var i;return d(this,e),i=h(this,p(e).call(this,t,n)),document.addEventListener("keydown",function(t){switch(t.keyCode){case 37:i.left();break;case 39:i.right();break;case 38:i.jump();break;case 40:i.duck()}}),document.addEventListener("keyup",function(t){switch(t.keyCode){case 37:case 39:i.stop();break;case 38:i.duck();break;case 40:i.jump()}}),i}return y(e,O),e}();function P(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var j=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.canvas=document.getElementById("canvas"),this.ctx=this.canvas.getContext("2d"),this.h=document.body.scrollHeight,this.w=document.body.getBoundingClientRect().width,this.scene=new r(this.canvas),this.canvas.height=this.h,this.canvas.width=this.w,this.ctx.fillStyle="white",this.ctx.fillRect(0,0,this.w,this.h),this.ctx.fill(),this.scene.fill("black"),this.scene.stroke("black"),this.spritesManager=new a("../assets/hero.png",this.bootstrap.bind(this))}return function(t,e,n){e&&P(t.prototype,e),n&&P(t,n)}(t,[{key:"bootstrap",value:function(){var t=this;this.place();var e=1e3;this.render(e),this.scene.cc.putImageData(this.spritesManager.ctx.getImageData(0,0,this.w,this.h),0,0),setInterval(function(){return t.render(e++)},1e3/24)}},{key:"place",value:function(){m=new S(this.w/2,3*this.h/4)}},{key:"render",value:function(t){this.scene.clear(),this.scene.line(0,3*this.h/4,this.w,3*this.h/4),m.update(),m.render(this.scene,this.spritesManager,t)}}]),t}();window.app=new j}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,